apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

def cfg = rootProject.ext.configuration;
def libs = rootProject.ext.libraries;

android {
    compileSdkVersion cfg.compileVersion
    buildToolsVersion cfg.buildToolsVersion

    defaultConfig {
        applicationId "com.smassive.daggerworkshopgdg.app"
        minSdkVersion cfg.minSdk
        targetSdkVersion cfg.targetSdk
        versionCode cfg.version_code
        versionName cfg.version_name
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor' // butterknife
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        abortOnError false;
        disable 'InvalidPackage' // Some libraries have issues with this.
        disable 'OldTargetApi' // Lint gives this warning but SDK 20 would be Android L Beta.
        disable 'IconDensities' // For testing purpose. This is safe to remove.
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'

    // Arch dependencies
    apt "com.google.dagger:dagger-compiler:${libs.dagger}"
    provided "org.glassfish:javax.annotation:${libs.javax_annotation}"
    compile "com.google.dagger:dagger:${libs.dagger}"

    // UI dependencies
    compile "com.android.support:appcompat-v7:${libs.supportVersion}"
    compile "com.android.support:design:${libs.supportVersion}"
    compile "com.android.support:cardview-v7:${libs.supportVersion}"
    compile "com.jakewharton:butterknife:${libs.butterknife}"
    compile "de.hdodenhof:circleimageview:${libs.circleimageview}"
    compile "com.squareup.picasso:picasso:${libs.picasso}"

    // Module dependencies
    compile project(':domain')
    compile project(':data')
}
